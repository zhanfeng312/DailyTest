*********************************************
find:
    find . -name "*.txt"

    find . -name "[a-z]*" 支持简单正则

    find . -perm 755 根据权限找

    find / -user user1 根据所有者来找

    stat file 查看文件的具体时间
    fzf@fzf:/fangzhf/myrepository/shell$ stat file1.txt 
      File: ‘file1.txt’
      Size: 0         	Blocks: 0          IO Block: 4096   regular empty file
    Device: 811h/2065d	Inode: 12747232    Links: 1
    Access: (0644/-rw-r--r--)  Uid: ( 1000/     fzf)   Gid: ( 1000/     fzf)
    Access: 2017-10-29 16:41:52.979742846 +0800
    Modify: 2017-10-29 16:41:52.979742846 +0800
    Change: 2017-10-29 16:41:52.979742846 +0800
     Birth: -

    find . -mtime -5  5天以内被更改的文件
    find . -mtime +3  更改时间在3天以前的文件

    find . -name "file*" | xargs rm -rf

    find . -type f | xargs ls -l
******************************************
正则表达式：
    what:
        表示字符串
    分类：
        基本正则：
            . * [...] ^ $ \ \{m,n\}
        扩展正则：
            ? + | () {m,n}
    基本正则：
        . ： 任意单个字符
        * ：表示它的前置字符有0个或多个
        .*：任意字符
        []：匹配中括号中的任意一个字符 中括号中的^表示除了
        | 或
        ^ ：开头
        $ ：结尾
        ^$：空行
        \ ：转义字符
        \{m,n\}：前面的字符出现至少m次，最多n次.
    扩展正则：
        -r 选项
        ? ：前面的字符出现0次/1次
        + ：前面的字符出现1次/多次
       () : 单元
       {m,n}:
*******************************************************   
grep：搜索
    grep -c 行号
    grep -n 行号显示
         -i 忽略大小写
         -v 取反过滤
*******************************************************
awk：列定位
    每行处理 默认以空格分隔    NR 行数 NF列数
    需求：
        1、拿出/etc/passwd 中的第一列
            cat /etc/passwd | cut -d: -f1
            cat /etc/passwd | awk -F: '{print $1}'
            
sed:行定位
*******************************************************
uniq:
    uniq -c file 紧挨着的重复行数
sort:    
    sort file    升序
    sort -r file 倒序
一般两个结合使用